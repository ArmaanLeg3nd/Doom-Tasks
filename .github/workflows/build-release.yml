name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'

permissions: write-all

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build Chrome extension
        run: |
          cp manifest.chrome.json manifest.json
          zip -r ./doom-tasks-chrome.zip . -x "*.git*" "manifest.*.json" "assets/*" "README.md"

      - name: Build Firefox extension
        run: |
          cp manifest.firefox.json manifest.json
          zip -r ./doom-tasks-firefox.zip . -x "*.git*" "manifest.*.json" "assets/*" "README.md"

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Chrome extension ZIP to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: doom-tasks-chrome.zip
          asset_name: doom-tasks-chrome.zip
          asset_content_type: application/zip

      - name: Upload Firefox extension ZIP to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: doom-tasks-firefox.zip
          asset_name: doom-ttasks-firefox.zip
          asset_content_type: application/zip

      - name: Publish Release
        if: always()
        uses: actions/github-script@v4
        with:
          script: |
            const octokit = require('@actions/github').getOctokit('${{ secrets.GITHUB_TOKEN }}');
            const release_id = ${{ steps.create_release.outputs.id }};
            await octokit.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              draft: false
            });
